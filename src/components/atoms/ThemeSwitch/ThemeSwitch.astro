---
import './ThemeSwitch.css'
---

<button class="themeToggle" id="themeToggle" title="Toggles light & dark" aria-label="light" aria-live="polite">
	<svg class="sunAndMoon" aria-hidden="true" width="24" height="24" viewBox="0 0 24 24">
		<mask class="moon" id="moonMask">
			<rect x="0" y="0" width="100%" height="100%" fill="white"></rect>
			<circle cx="24" cy="10" r="6" fill="black"></circle>
		</mask>
		<circle class="sun" cx="12" cy="12" r="6" mask="url(#moonMask)" fill="currentColor"></circle>
		<g class="sunBeams" stroke="currentColor">
			<line x1="12" y1="1" x2="12" y2="3"></line>
			<line x1="12" y1="21" x2="12" y2="23"></line>
			<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
			<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
			<line x1="1" y1="12" x2="3" y2="12"></line>
			<line x1="21" y1="12" x2="23" y2="12"></line>
			<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
			<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
		</g>
	</svg>
</button>

<script>
	const storageKey = 'theme-preference'

	const getColorPreference = () => {
		if (localStorage.getItem(storageKey)?.length) {
			return localStorage.getItem(storageKey)
		}

		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
	}

	const applyPreference = () => {
		document.querySelector('#themeToggle')?.setAttribute('aria-label', theme.value ?? '')

		document.firstElementChild?.setAttribute('data-theme', theme.value ?? '')
	}

	const setColorPreference = () => {
		localStorage.setItem(storageKey, theme.value ?? '')

		if (!document.startViewTransition) {
			applyPreference()
			return
		}

		document.startViewTransition(() => {
			applyPreference()
		})
	}

	const theme = {
		value: getColorPreference(),
	}

	// set early so no page flashes / CSS is made aware
	applyPreference()

	window.onload = () => {
		// set on load so screen readers can see latest value on the button
		applyPreference()

		// now this script can find and listen for clicks on the control
		document.querySelector('#themeToggle')?.addEventListener('click', () => {
			// flip current value
			theme.value = theme.value === 'light' ? 'dark' : 'light'

			setColorPreference()
		})
	}

	// sync with system changes
	window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', ({ matches: isDark }) => {
		theme.value = isDark ? 'dark' : 'light'
		setColorPreference()
	})
</script>
